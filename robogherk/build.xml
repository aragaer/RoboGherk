<?xml version="1.0" encoding="UTF-8"?>
<project name="robogherk" default="help">

    <property file="local.properties" />
    <property file="ant.properties" />

    <property environment="env" />
    <condition property="sdk.dir" value="${env.ANDROID_HOME}">
        <isset property="env.ANDROID_HOME" />
    </condition>

    <loadproperties srcFile="project.properties" />

    <fail
            message="sdk.dir is missing. Make sure to generate local.properties using 'android update project' or to inject it through the ANDROID_HOME environment variable."
            unless="sdk.dir"
    />

    <tempfile property="version.file" />
    <exec executable="/bin/sh">
        <arg value="-c" />
        <arg value="git describe --match 'v*' | sed -e 's/^v/version=/' &gt; ${version.file}" />
    </exec>
    <loadproperties srcFile="${version.file}" />
    <delete file="${version.file}" />

    <target name="release-jars" depends="release">
        <delete dir="bin/artifacts" />
        <mkdir dir="bin/artifacts" />

        <jar destfile="bin/artifacts/robogherk-${version}.jar">
            <fileset dir="bin/classes" />
            <manifest>
                <attribute name="Implementation-Vendor" value="LeanDog, Inc." />
                <attribute name="Implementation-Title" value="RoboGherk" />
                <attribute name="Implementation-Version" value="${version}" />
            </manifest>
        </jar>

        <copy file="ivy.xml" tofile="bin/artifacts/ivy-${version}.xml"/>

    </target>

    <!--
        Import per project custom build rules if present at the root of the project.
        This is the place to put custom intermediary targets such as:
            -pre-build
            -pre-compile
            -post-compile (This is typically used for code obfuscation.
                           Compiled code location: ${out.classes.absolute.dir}
                           If this is not done in place, override ${out.dex.input.absolute.dir})
            -post-package
            -post-build
            -pre-clean
    -->
    <import file="custom_rules.xml" optional="true" />

    <!-- Import the actual build file.

         To customize existing targets, there are two options:
         - Customize only one target:
             - copy/paste the target into this file, *before* the
               <import> task.
             - customize it to your needs.
         - Customize the whole content of build.xml
             - copy/paste the content of the rules files (minus the top node)
               into this file, replacing the <import> task.
             - customize to your needs.

         ***********************
         ****** IMPORTANT ******
         ***********************
         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,
         in order to avoid having your file be overridden by tools such as "android update project"
    -->
    <!-- version-tag: 1 -->
    <import file="${sdk.dir}/tools/ant/build.xml" />

</project>
